dependencies {
    compile 'gov.nasa.jpf.jpf-core:main:0.1'
    compile files(new File(rootProject.projectDir, "lib/iasolver.jar"))
    compile files(new File(rootProject.projectDir, "lib/com.microsoft.z3.jar"))
    compile files(new File(rootProject.projectDir, "lib/green.jar"))
    compile 'dk.brics.automaton:automaton:1.11-8'
    compile files(new File(rootProject.projectDir, "lib/hampi.jar"))
    compile files(new File(rootProject.projectDir, "lib/coral.jar"))
    compile files(new File(rootProject.projectDir, "lib/libcvc3.jar"))
    compile files(new File(rootProject.projectDir, "lib/aima-core.jar"))
    compile files(new File(rootProject.projectDir, "lib/org.sat4j.core.jar"))
    compile files(new File(rootProject.projectDir, "lib/org.sat4j.pb.jar"))
    compile files(new File(rootProject.projectDir, "lib/choco-solver-2.1.1-20100709.142532-2.jar"))
    compile files(new File(rootProject.projectDir, "lib/choco-1_2_04.jar"))
    compile files(new File(rootProject.projectDir, "lib/yicesapijava.jar"))
    compile files(new File(rootProject.projectDir, "lib/string.jar"))
    compile files(new File(rootProject.projectDir, "lib/grappa.jar"))
    compile files(new File(rootProject.projectDir, "lib/proteus.jar"))
    compile 'commons-lang:commons-lang:2.4'
    runtime files(new File(rootProject.projectDir, "lib/opt4j-2.4.jar"))
    runtime 'commons-math:commons-math:1.2'
}

task mainWithDependencies(type: Jar) {
    from {
        configurations.compile.collect({ zipTree(it) })
        configurations.runtime.collect({ zipTree(it) })
    }
    baseName = 'main-all'
    with jar
}

jar {
    dependsOn mainWithDependencies
}

artifacts {
    archives mainWithDependencies
}

install {
    repositories.mavenInstaller {
        addFilter('main-all') {
            artifact, file -> artifact.name == 'main-all'
        }
        addFilter('main') {
            artifact, file -> artifact.name == 'main'
        }
        pom('main-all').artifactId = 'main-all'
        pom('main').artifactId = 'main'
    }
}
